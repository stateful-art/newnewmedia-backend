version: '3'

services:
  nginx-proxyy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"   # HTTP traffic
      - "443:443"   # HTTPS traffic
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d  # Add this line to map the vhost.d directory
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy
    restart: always

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxyy
    volumes_from:
      - nginx-proxyy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - html:/usr/share/nginx/html
    restart: always

  redis-alpine:  # Define a new service for Redis Alpine
    image: redis:alpine
    ports:
      - "6379:6379"  # Expose port 6379 for Redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - redis-network  # Assign the Redis service to the redis-network

  nats-alpine:  # Define a new service for NATS Alpine
    image: nats:alpine
    ports:
      - "4222:4222"  # Expose port 4222 for NATS
    restart: always
    networks:
      - nats-network
    

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0
      # - bootstrap.memory_lock=true
      # - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=asdfxxxyyy
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - elastic-network
    

  backend_fiber:
    image: golang:1.21.0-alpine
    build: .
    restart: always
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    expose:
      - "3000"
    depends_on:
      - redis-alpine  # Specify Redis Alpine as a dependency
      - nats-alpine
      - elasticsearch
    networks:
      - proxy
      - redis-network  # Connect the backend_fiber service to the redis-network
      - elastic-network
      - nats-network

volumes:
  conf:
  vhost:  # Add this volume definition for vhost.d
  html:
  dhparam:
  certs:
  redis_data:
  esdata:

networks:
  proxy:
    external:
      name: nginx-proxyy
  redis-network:  # Define a new network for Redis
  elastic-network:
  nats-network:
